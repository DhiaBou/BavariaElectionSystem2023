"""Added election models

Revision ID: ecdb21f96960
Revises: aaa593e283b9
Create Date: 2023-11-19 10:32:02.557613

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ecdb21f96960'
down_revision: Union[str, None] = 'aaa593e283b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parteien',
    sa.Column('ParteiID', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('Beschreibung', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ParteiID')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('wahlkreis',
    sa.Column('WahlkreisId', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('WahlkreisId')
    )
    op.create_table('landeslisten',
    sa.Column('ListeID', sa.Integer(), nullable=False),
    sa.Column('ParteiID', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('WahlkreisId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ParteiID'], ['parteien.ParteiID'], ),
    sa.ForeignKeyConstraint(['WahlkreisId'], ['wahlkreis.WahlkreisId'], ),
    sa.PrimaryKeyConstraint('ListeID')
    )
    op.create_table('stimmkreis',
    sa.Column('StimmkreisId', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('Stimmberechtigte', sa.Integer(), nullable=True),
    sa.Column('WahlkreisId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['WahlkreisId'], ['wahlkreis.WahlkreisId'], ),
    sa.PrimaryKeyConstraint('StimmkreisId')
    )
    op.create_table('kandidaten',
    sa.Column('KandidatID', sa.Integer(), nullable=False),
    sa.Column('Vorname', sa.String(), nullable=True),
    sa.Column('Nachname', sa.String(), nullable=True),
    sa.Column('ParteiID', sa.Integer(), nullable=True),
    sa.Column('StimmkreisId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ParteiID'], ['parteien.ParteiID'], ),
    sa.ForeignKeyConstraint(['StimmkreisId'], ['stimmkreis.StimmkreisId'], ),
    sa.PrimaryKeyConstraint('KandidatID')
    )
    op.create_table('waehler',
    sa.Column('WaehlerID', sa.Integer(), nullable=False),
    sa.Column('Vorname', sa.String(), nullable=True),
    sa.Column('Nachname', sa.String(), nullable=True),
    sa.Column('Geburtsdatum', sa.Date(), nullable=True),
    sa.Column('StimmkreisId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['StimmkreisId'], ['stimmkreis.StimmkreisId'], ),
    sa.PrimaryKeyConstraint('WaehlerID')
    )
    op.create_table('erste_stimmzettel',
    sa.Column('Erste_StimmzettelID', sa.Integer(), nullable=False),
    sa.Column('StimmkreisId', sa.Integer(), nullable=True),
    sa.Column('KandidatID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['KandidatID'], ['kandidaten.KandidatID'], ),
    sa.ForeignKeyConstraint(['StimmkreisId'], ['stimmkreis.StimmkreisId'], ),
    sa.PrimaryKeyConstraint('Erste_StimmzettelID')
    )
    op.create_table('listenkandidaten',
    sa.Column('ListenkandidatID', sa.Integer(), nullable=False),
    sa.Column('ListeID', sa.Integer(), nullable=True),
    sa.Column('KandidatID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['KandidatID'], ['kandidaten.KandidatID'], ),
    sa.ForeignKeyConstraint(['ListeID'], ['landeslisten.ListeID'], ),
    sa.PrimaryKeyConstraint('ListenkandidatID')
    )
    op.create_table('stimmzettel',
    sa.Column('StimmzettelID', sa.Integer(), nullable=False),
    sa.Column('Jahr', sa.Integer(), nullable=True),
    sa.Column('Erstestimme', sa.Integer(), nullable=True),
    sa.Column('Zweitstimme', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Erstestimme'], ['kandidaten.KandidatID'], ),
    sa.ForeignKeyConstraint(['Zweitstimme'], ['kandidaten.KandidatID'], ),
    sa.PrimaryKeyConstraint('StimmzettelID')
    )
    op.create_table('zweite_stimmzettel',
    sa.Column('Zweite_StimmzettelID', sa.Integer(), nullable=False),
    sa.Column('WahlkreisId', sa.Integer(), nullable=True),
    sa.Column('ListenkandidatID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ListenkandidatID'], ['listenkandidaten.ListenkandidatID'], ),
    sa.ForeignKeyConstraint(['WahlkreisId'], ['wahlkreis.WahlkreisId'], ),
    sa.PrimaryKeyConstraint('Zweite_StimmzettelID')
    )
    op.drop_table('students')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='students_pkey')
    )
    op.drop_table('zweite_stimmzettel')
    op.drop_table('stimmzettel')
    op.drop_table('listenkandidaten')
    op.drop_table('erste_stimmzettel')
    op.drop_table('waehler')
    op.drop_table('kandidaten')
    op.drop_table('stimmkreis')
    op.drop_table('landeslisten')
    op.drop_table('wahlkreis')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('parteien')
    # ### end Alembic commands ###
